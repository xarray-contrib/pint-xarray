# adapted from xarray's nightly CI
name: Nightly CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * *"  # Daily "At 00:00" UTC

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-test-upstream-trigger:
    name: "Detect CI Trigger: [test-upstream]"
    if: |
      github.repository_owner == 'xarray-contrib'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: xarray-contrib/ci-trigger@v1.2
      id: detect-trigger
      with:
        keyword: "[test-upstream]"

  upstream-dev:
    name: upstream-dev
    runs-on: ubuntu-latest
    needs: detect-test-upstream-trigger

    if: |
      always()
      && github.repository_owner == 'xarray-contrib'
      && (
        (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        || needs.detect-test-upstream-trigger.outputs.triggered == 'true'
        || (
          github.event_name == 'pull_request'
          && contains(github.event.pull_request.labels.*.name, 'run-upstream')
        )
      )

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    outputs:
      artifacts_availability: ${{ steps.status.outputs.ARTIFACTS_AVAILABLE }}

    steps:
    - name: checkout the repository
      uses: actions/checkout@v4
      with:
        # need to fetch all tags to get a correct version
        fetch-depth: 0  # fetch all branches and tags

    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: upgrade pip
      run: python -m pip install --upgrade pip

    - name: install dependencies
      run: |
        python -m pip install -r ci/requirements.txt
        python -m pip install pytest-reportlog

    - name: install upstream-dev dependencies
      run: bash ci/install-upstream-dev.sh

    - name: install pint-xarray
      run: python -m pip install .

    - name: show versions
      run: python -m pip list

    - name: run tests
      if: success()
      id: status
      run: |
        python -m pytest -rf --report-log=pytest-log.jsonl

    - name: report failures
      if: |
        failure()
        && steps.tests.outcome == 'failure'
        && github.event_name == 'schedule'
      uses: xarray-contrib/issue-from-pytest-log@v1
      with:
        log-path: pytest-log.jsonl
